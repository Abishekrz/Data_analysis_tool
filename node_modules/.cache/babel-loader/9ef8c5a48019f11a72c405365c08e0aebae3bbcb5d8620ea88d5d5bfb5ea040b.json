{"ast":null,"code":"var _jsxFileName = \"C:\\\\d_drive\\\\data_analysis\\\\data-preprocessing-dashboard\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filename, setFilename] = useState(\"\");\n  const [responseData, setResponseData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const allowedExtensions = [\"csv\", \"xls\"];\n    const fileExtension = file.name.split(\".\").pop().toLowerCase();\n    if (!allowedExtensions.includes(fileExtension)) {\n      setError(\"Only CSV and XLS files are allowed.\");\n      setSelectedFile(null);\n      return;\n    }\n    setError(\"\"); // Clear errors\n    setSelectedFile(file);\n  };\n  const uploadFile = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a valid file before uploading.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setFilename(selectedFile.name);\n        alert(\"File uploaded successfully!\");\n      } else {\n        setError(data.error || \"File upload failed.\");\n      }\n    } catch (error) {\n      setError(\"Server error. Please try again.\");\n    }\n  };\n  const requestOperation = async operation => {\n    if (!filename) {\n      alert(\"Upload a file first!\");\n      return;\n    }\n    setLoading(true);\n    setResponseData(null);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/process\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          filename,\n          operation\n        })\n      });\n      const data = await response.json();\n      setResponseData(data.data);\n    } catch (error) {\n      setError(\"Error processing data. Try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Mining Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv,.xls\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-btn\",\n      onClick: uploadFile,\n      disabled: !selectedFile,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"sampling\"),\n        disabled: !filename,\n        children: \"Sampling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"normalization\"),\n        disabled: !filename,\n        children: \"Normalization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"pca\"),\n        disabled: !filename,\n        children: \"PCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"clustering\"),\n        disabled: !filename,\n        children: \"Clustering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"market_analysis\"),\n        disabled: !filename,\n        children: \"Market Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: responseData ? JSON.stringify(JSON.parse(responseData), null, 2) : \"No data processed yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Q7bzjafTzCNyzi2gQm2leYY2s2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","filename","setFilename","responseData","setResponseData","error","setError","loading","setLoading","handleFileChange","e","file","target","files","allowedExtensions","fileExtension","name","split","pop","toLowerCase","includes","uploadFile","alert","formData","FormData","append","response","fetch","method","body","data","json","ok","requestOperation","operation","headers","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","parse","_c","$RefreshReg$"],"sources":["C:/d_drive/data_analysis/data-preprocessing-dashboard/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./FileUpload.css\";\r\n\r\nconst App = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [filename, setFilename] = useState(\"\");\r\n    const [responseData, setResponseData] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        const allowedExtensions = [\"csv\", \"xls\"];\r\n        const fileExtension = file.name.split(\".\").pop().toLowerCase();\r\n\r\n        if (!allowedExtensions.includes(fileExtension)) {\r\n            setError(\"Only CSV and XLS files are allowed.\");\r\n            setSelectedFile(null);\r\n            return;\r\n        }\r\n\r\n        setError(\"\");  // Clear errors\r\n        setSelectedFile(file);\r\n    };\r\n\r\n    const uploadFile = async () => {\r\n        if (!selectedFile) {\r\n            alert(\"Please select a valid file before uploading.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile);\r\n\r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:5000/upload\", {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setFilename(selectedFile.name);\r\n                alert(\"File uploaded successfully!\");\r\n            } else {\r\n                setError(data.error || \"File upload failed.\");\r\n            }\r\n        } catch (error) {\r\n            setError(\"Server error. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const requestOperation = async (operation) => {\r\n        if (!filename) {\r\n            alert(\"Upload a file first!\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setResponseData(null);\r\n\r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:5000/process\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ filename, operation }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            setResponseData(data.data);\r\n        } catch (error) {\r\n            setError(\"Error processing data. Try again.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Data Mining Dashboard</h1>\r\n            \r\n            <input type=\"file\" accept=\".csv,.xls\" onChange={handleFileChange} />\r\n            {error && <p className=\"error\">{error}</p>}\r\n\r\n            <button className=\"upload-btn\" onClick={uploadFile} disabled={!selectedFile}>\r\n                Upload File\r\n            </button>\r\n\r\n            <div className=\"button-container\">\r\n                <button onClick={() => requestOperation(\"sampling\")} disabled={!filename}>Sampling</button>\r\n                <button onClick={() => requestOperation(\"normalization\")} disabled={!filename}>Normalization</button>\r\n                <button onClick={() => requestOperation(\"pca\")} disabled={!filename}>PCA</button>\r\n                <button onClick={() => requestOperation(\"clustering\")} disabled={!filename}>Clustering</button>\r\n                <button onClick={() => requestOperation(\"market_analysis\")} disabled={!filename}>Market Analysis</button>\r\n            </div>\r\n\r\n            <div className=\"result\">\r\n                <h3>Processed Data:</h3>\r\n                {loading ? <p>Loading...</p> : \r\n                    <pre>{responseData ? JSON.stringify(JSON.parse(responseData), null, 2) : \"No data processed yet\"}</pre>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,iBAAiB,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;IACxC,MAAMC,aAAa,GAAGJ,IAAI,CAACK,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAE9D,IAAI,CAACL,iBAAiB,CAACM,QAAQ,CAACL,aAAa,CAAC,EAAE;MAC5CT,QAAQ,CAAC,qCAAqC,CAAC;MAC/CN,eAAe,CAAC,IAAI,CAAC;MACrB;IACJ;IAEAM,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;IACfN,eAAe,CAACW,IAAI,CAAC;EACzB,CAAC;EAED,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACtB,YAAY,EAAE;MACfuB,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE1B,YAAY,CAAC;IAErC,IAAI;MACA,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACb9B,WAAW,CAACH,YAAY,CAACiB,IAAI,CAAC;QAC9BM,KAAK,CAAC,6BAA6B,CAAC;MACxC,CAAC,MAAM;QACHhB,QAAQ,CAACwB,IAAI,CAACzB,KAAK,IAAI,qBAAqB,CAAC;MACjD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,QAAQ,CAAC,iCAAiC,CAAC;IAC/C;EACJ,CAAC;EAED,MAAM2B,gBAAgB,GAAG,MAAOC,SAAS,IAAK;IAC1C,IAAI,CAACjC,QAAQ,EAAE;MACXqB,KAAK,CAAC,sBAAsB,CAAC;MAC7B;IACJ;IAEAd,UAAU,CAAC,IAAI,CAAC;IAChBJ,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACA,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdO,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAAC;UAAEpC,QAAQ;UAAEiC;QAAU,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMJ,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC3B,eAAe,CAAC0B,IAAI,CAACA,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACZC,QAAQ,CAAC,mCAAmC,CAAC;IACjD,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAK0C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB3C,OAAA;MAAA2C,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9B/C,OAAA;MAAOgD,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,WAAW;MAACC,QAAQ,EAAErC;IAAiB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnEtC,KAAK,iBAAIT,OAAA;MAAG0C,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAElC;IAAK;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1C/C,OAAA;MAAQ0C,SAAS,EAAC,YAAY;MAACS,OAAO,EAAE1B,UAAW;MAAC2B,QAAQ,EAAE,CAACjD,YAAa;MAAAwC,QAAA,EAAC;IAE7E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAET/C,OAAA;MAAK0C,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7B3C,OAAA;QAAQmD,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,UAAU,CAAE;QAACe,QAAQ,EAAE,CAAC/C,QAAS;QAAAsC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3F/C,OAAA;QAAQmD,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,eAAe,CAAE;QAACe,QAAQ,EAAE,CAAC/C,QAAS;QAAAsC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrG/C,OAAA;QAAQmD,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,KAAK,CAAE;QAACe,QAAQ,EAAE,CAAC/C,QAAS;QAAAsC,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjF/C,OAAA;QAAQmD,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,YAAY,CAAE;QAACe,QAAQ,EAAE,CAAC/C,QAAS;QAAAsC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/F/C,OAAA;QAAQmD,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,iBAAiB,CAAE;QAACe,QAAQ,EAAE,CAAC/C,QAAS;QAAAsC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxG,CAAC,eAEN/C,OAAA;MAAK0C,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnB3C,OAAA;QAAA2C,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvBpC,OAAO,gBAAGX,OAAA;QAAA2C,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBACxB/C,OAAA;QAAA2C,QAAA,EAAMpC,YAAY,GAAGiC,IAAI,CAACC,SAAS,CAACD,IAAI,CAACa,KAAK,CAAC9C,YAAY,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;MAAuB;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1G,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC7C,EAAA,CAvGID,GAAG;AAAAqD,EAAA,GAAHrD,GAAG;AAyGT,eAAeA,GAAG;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}