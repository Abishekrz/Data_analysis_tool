{"ast":null,"code":"var _jsxFileName = \"C:\\\\d_drive\\\\data_analysis\\\\data-preprocessing-dashboard\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreprocessingDashboard = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [operation, setOperation] = useState(\"sampling\");\n  const [resultTable, setResultTable] = useState(\"\");\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type === \"text/csv\") {\n      setSelectedFile(file);\n      setMessage(\"\");\n    } else {\n      setMessage(\"Please upload a valid CSV file.\");\n      setSelectedFile(null);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setMessage(\"No file selected.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData);\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Upload failed.\");\n    }\n  };\n  const handleProcess = async () => {\n    if (!selectedFile) {\n      setMessage(\"No file uploaded.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/process\", {\n        filename: selectedFile.name,\n        operation\n      });\n      if (response.data.status === \"success\") {\n        setResultTable(response.data.table);\n        setMessage(\"Processing complete.\");\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Processing failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Preprocessing Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".csv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-2\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: operation,\n        onChange: e => setOperation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sampling\",\n          children: \"Sampling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"normalization\",\n          children: \"Normalization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pca\",\n          children: \"PCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"clustering\",\n          children: \"Clustering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-2\",\n        onClick: handleProcess,\n        children: \"Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), resultTable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: resultTable\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(PreprocessingDashboard, \"yaDXEdaPP+ShZXvkSIK3/zUoj4U=\");\n_c = PreprocessingDashboard;\nexport default PreprocessingDashboard;\nvar _c;\n$RefreshReg$(_c, \"PreprocessingDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PreprocessingDashboard","_s","selectedFile","setSelectedFile","message","setMessage","operation","setOperation","resultTable","setResultTable","handleFileChange","event","file","target","files","type","handleUpload","formData","FormData","append","response","post","data","error","_error$response","_error$response$data","handleProcess","filename","name","status","table","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","accept","onClick","value","e","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/d_drive/data_analysis/data-preprocessing-dashboard/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./FileUpload.css\"\r\n\r\nconst PreprocessingDashboard = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [operation, setOperation] = useState(\"sampling\");\r\n  const [resultTable, setResultTable] = useState(\"\");\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type === \"text/csv\") {\r\n      setSelectedFile(file);\r\n      setMessage(\"\");\r\n    } else {\r\n      setMessage(\"Please upload a valid CSV file.\");\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setMessage(\"No file selected.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/upload\", formData);\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.error || \"Upload failed.\");\r\n    }\r\n  };\r\n\r\n  const handleProcess = async () => {\r\n    if (!selectedFile) {\r\n      setMessage(\"No file uploaded.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/process\", {\r\n        filename: selectedFile.name,\r\n        operation,\r\n      });\r\n\r\n      if (response.data.status === \"success\") {\r\n        setResultTable(response.data.table);\r\n        setMessage(\"Processing complete.\");\r\n      } else {\r\n        setMessage(response.data.error);\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.error || \"Processing failed.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Data Preprocessing Dashboard</h2>\r\n      <input type=\"file\" onChange={handleFileChange} accept=\".csv\" />\r\n      <button className=\"btn btn-primary mt-2\" onClick={handleUpload}>Upload</button>\r\n\r\n      <div className=\"mt-3\">\r\n        <select value={operation} onChange={(e) => setOperation(e.target.value)}>\r\n          <option value=\"sampling\">Sampling</option>\r\n          <option value=\"normalization\">Normalization</option>\r\n          <option value=\"pca\">PCA</option>\r\n          <option value=\"clustering\">Clustering</option>\r\n          {/* <option value=\"market_analysis\">Market Analysis</option> */}\r\n        </select>\r\n        <button className=\"btn btn-success mt-2\" onClick={handleProcess}>Process</button>\r\n      </div>\r\n\r\n      {message && <p className=\"mt-3\">{message}</p>}\r\n\r\n      {resultTable && (\r\n        <div className=\"mt-4\">\r\n          <h3>Processed Data</h3>\r\n          <div dangerouslySetInnerHTML={{ __html: resultTable }} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreprocessingDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}