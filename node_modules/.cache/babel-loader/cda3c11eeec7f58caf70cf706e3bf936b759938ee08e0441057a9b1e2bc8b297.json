{"ast":null,"code":"var _jsxFileName = \"C:\\\\d_drive\\\\data_analysis\\\\data-preprocessing-dashboard\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filename, setFilename] = useState(\"\");\n  const [responseData, setResponseData] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const uploadFile = async () => {\n    if (!selectedFile) return alert(\"Please select a file\");\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    const response = await fetch(\"http://127.0.0.1:5000/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n    if (data.message) {\n      setFilename(selectedFile.name);\n      alert(\"File uploaded successfully!\");\n    }\n  };\n  const requestOperation = async operation => {\n    if (!filename) return alert(\"Upload a file first!\");\n    const response = await fetch(\"http://127.0.0.1:5000/process\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        filename,\n        operation\n      })\n    });\n    const data = await response.json();\n    setResponseData(data.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Mining Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-btn\",\n      onClick: uploadFile,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"sampling\"),\n        children: \"Sampling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"normalization\"),\n        children: \"Normalization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"pca\"),\n        children: \"PCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"clustering\"),\n        children: \"Clustering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"market_analysis\"),\n        children: \"Market Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: responseData ? JSON.stringify(JSON.parse(responseData), null, 2) : \"No data processed yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"EFqjy4x7JGx1clw+6Ne39fKRO/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","filename","setFilename","responseData","setResponseData","handleFileChange","e","target","files","uploadFile","alert","formData","FormData","append","response","fetch","method","body","data","json","message","name","requestOperation","operation","headers","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","parse","_c","$RefreshReg$"],"sources":["C:/d_drive/data_analysis/data-preprocessing-dashboard/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./FileUpload.css\";\r\n\r\nconst App = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [filename, setFilename] = useState(\"\");\r\n    const [responseData, setResponseData] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFile(e.target.files[0]);\r\n    };\r\n\r\n    const uploadFile = async () => {\r\n        if (!selectedFile) return alert(\"Please select a file\");\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile);\r\n\r\n        const response = await fetch(\"http://127.0.0.1:5000/upload\", {\r\n            method: \"POST\",\r\n            body: formData,\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.message) {\r\n            setFilename(selectedFile.name);\r\n            alert(\"File uploaded successfully!\");\r\n        }\r\n    };\r\n\r\n    const requestOperation = async (operation) => {\r\n        if (!filename) return alert(\"Upload a file first!\");\r\n\r\n        const response = await fetch(\"http://127.0.0.1:5000/process\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ filename, operation }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        setResponseData(data.data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Data Mining Dashboard</h1>\r\n            \r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button className=\"upload-btn\" onClick={uploadFile}>Upload File</button>\r\n\r\n            <div className=\"button-container\">\r\n                <button onClick={() => requestOperation(\"sampling\")}>Sampling</button>\r\n                <button onClick={() => requestOperation(\"normalization\")}>Normalization</button>\r\n                <button onClick={() => requestOperation(\"pca\")}>PCA</button>\r\n                <button onClick={() => requestOperation(\"clustering\")}>Clustering</button>\r\n                <button onClick={() => requestOperation(\"market_analysis\")}>Market Analysis</button>\r\n            </div>\r\n\r\n            <div className=\"result\">\r\n                <h3>Processed Data:</h3>\r\n                <pre>{responseData ? JSON.stringify(JSON.parse(responseData), null, 2) : \"No data processed yet\"}</pre>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}