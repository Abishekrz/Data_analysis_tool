{"ast":null,"code":"var _jsxFileName = \"C:\\\\d_drive\\\\data_analysis\\\\data-preprocessing-dashboard\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filename, setFilename] = useState(\"\");\n  const [responseData, setResponseData] = useState(null);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    // Allow only CSV and XLS files\n    if (!selectedFile) {\n      setError(\"Please select a file.\");\n      return;\n    }\n    const allowedExtensions = [\"csv\", \"xls\"];\n    const fileExtension = selectedFile.name.split(\".\").pop().toLowerCase();\n    if (!allowedExtensions.includes(fileExtension)) {\n      setError(\"Only CSV and XLS files are allowed.\");\n      setFile(null);\n      return;\n    }\n    setFile(selectedFile);\n    setError(\"\"); // Clear errors\n  };\n  const requestOperation = async operation => {\n    if (!filename) return alert(\"Upload a file first!\");\n    const response = await fetch(\"http://127.0.0.1:5000/process\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        filename,\n        operation\n      })\n    });\n    const data = await response.json();\n    setResponseData(data.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Mining Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-btn\",\n      onClick: uploadFile,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"sampling\"),\n        children: \"Sampling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"normalization\"),\n        children: \"Normalization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"pca\"),\n        children: \"PCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"clustering\"),\n        children: \"Clustering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestOperation(\"market_analysis\"),\n        children: \"Market Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: responseData ? JSON.stringify(JSON.parse(responseData), null, 2) : \"No data processed yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"EFqjy4x7JGx1clw+6Ne39fKRO/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","filename","setFilename","responseData","setResponseData","handleFileChange","event","target","files","setError","allowedExtensions","fileExtension","name","split","pop","toLowerCase","includes","setFile","requestOperation","operation","alert","response","fetch","method","headers","body","JSON","stringify","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","uploadFile","parse","_c","$RefreshReg$"],"sources":["C:/d_drive/data_analysis/data-preprocessing-dashboard/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./FileUpload.css\";\r\n\r\nconst App = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [filename, setFilename] = useState(\"\");\r\n    const [responseData, setResponseData] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        const selectedFile = event.target.files[0];\r\n    \r\n        // Allow only CSV and XLS files\r\n        if (!selectedFile) {\r\n          setError(\"Please select a file.\");\r\n          return;\r\n        }\r\n        \r\n        const allowedExtensions = [\"csv\", \"xls\"];\r\n        const fileExtension = selectedFile.name.split(\".\").pop().toLowerCase();\r\n    \r\n        if (!allowedExtensions.includes(fileExtension)) {\r\n          setError(\"Only CSV and XLS files are allowed.\");\r\n          setFile(null);\r\n          return;\r\n        }\r\n    \r\n        setFile(selectedFile);\r\n        setError(\"\"); // Clear errors\r\n      };\r\n    const requestOperation = async (operation) => {\r\n        if (!filename) return alert(\"Upload a file first!\");\r\n\r\n        const response = await fetch(\"http://127.0.0.1:5000/process\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ filename, operation }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        setResponseData(data.data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Data Mining Dashboard</h1>\r\n            \r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button className=\"upload-btn\" onClick={uploadFile}>Upload File</button>\r\n\r\n            <div className=\"button-container\">\r\n                <button onClick={() => requestOperation(\"sampling\")}>Sampling</button>\r\n                <button onClick={() => requestOperation(\"normalization\")}>Normalization</button>\r\n                <button onClick={() => requestOperation(\"pca\")}>PCA</button>\r\n                <button onClick={() => requestOperation(\"clustering\")}>Clustering</button>\r\n                <button onClick={() => requestOperation(\"market_analysis\")}>Market Analysis</button>\r\n            </div>\r\n\r\n            <div className=\"result\">\r\n                <h3>Processed Data:</h3>\r\n                <pre>{responseData ? JSON.stringify(JSON.parse(responseData), null, 2) : \"No data processed yet\"}</pre>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}